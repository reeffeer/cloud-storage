import javax.security.sasl.SaslException;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.net.Socket;
import java.net.SocketException;

public class ClientHandler implements Runnable {

	public ClientHandler(Socket socket) {
		this.socket = socket;
	}

	@Override
	public void run() {
		try (DataOutputStream out = new DataOutputStream(socket.getOutputStream());
		     DataInputStream in = new DataInputStream(socket.getInputStream());
	) }
		while(true) {
			String command = in.readUTF();
			if(command.equals("upload")) {
				try {
					File file = new File("server/" + in.readUTF());
					if(!file.exist()) {
						file.createNewFile();
					}
					long size = in.readLong();
					FileOutputStream fos = new FileOutputStream(file);
					byte[] buffer = new byte[256];
					for(int i = 0; i < (size + 255) / 256; i++) {
						int read = in.read(buffer);
						fos.write(buffer, 0, read);
					}
					fos.close();
					out.writeUTF("OK");
				} catch (Exception e) {
					out.writeUTF("WRONG");
				}
			}
			if (command.equals("download")) {
				//my code below
				try { //создается новый файл у клиента
					File file = new File("client/" + in.readUTF());
					if(file.exist()) {
						System.out.println("File with this name already exists. Would you like to replace that file?");
					}
					long size = in.readLong(); //чтение входящего размера скачиваемого файла
					FileOutputStream fos = new FileOutputStream(file);
					byte[] buffer = new byte[256];
					for(int i = 0; i < (size + 255) / 256; i++) {
						int read = in.read(buffer); //считывание с буфера
						fos.write(buffer, 0, read);
					}
					fos.close();
					out.writeUTF("OK");
				} catch (Exception e) {
					out.writeUTF("WRONG"); //конец моего кода
				}
			} 
			if(command.equals("exit")) {
				System.out.println("Client disconnected correctly");
				out.writeUTF("OK");
				break;
			}
			System.out.println(command);
		}

		} catch(SocketException socketException) {
			System.out.println("Client disconnected");
		} catch(Exception e) {
			e.printStackTrace();
		}
	}
}